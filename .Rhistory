# Your code here
library(stringr)
sum(str_match(sales$Product.Name,'table'))
# Your code here
library(stringr)
sum(str_count(sales$Product.Name,'table'))
# Your code here
library(stringr)
length(str_count(sales$Product.Name,'table'))
# Your code here
library(stringr)
sum(str_count(sales$Product.Name,'table'))
# Your code here
library(stringr)
sum(str_count(sales$Product.Name,'table'))
# Your code here
library(stringr)
sum(str_count(sales$Product.Name,'table'))
# Your code here
library(stringr)
length(str_which(sales$Product.Name,'table'))
# Your code here
library(stringr)
length(str_which(sales$Product.Name,'table'))
# Your code here
library(stringr)
sum(str_which(sales$Product.Name,'table'))
# Your code here
library(stringr)
sum(str_count(sales$Product.Name,'table'))
# Your code here
library(stringr)
str_view_all(sales$Product.Name,'table'))
# Your code here
library(stringr)
str_view_all(sales$Product.Name,'table')
?str_view
# Your code here
library(stringr)
str_view_all(sales$Product.Name, pattern = table)
# Your code here
library(stringr)
str_view(sales$Product.Name, pattern = table)
# Your code here
library(stringr)
str_view(sales$Product.Name, pattern = 'table')
# Your code here
library(stringr)
str_view(sales$Product.Name, pattern = 'table', match = TRUE)
# Your code here
library(stringr)
str_view(sales$Product.Name, pattern = 'table', match = TRUE)
# Your code here
library(stringr)
sales$Product.Name
# Your code here
library(stringr)
str_split_fixed(sales$Product.Name, pattern = ' ', n=3)
# Your code here
library(stringr)
str_split_fixed(sales$Product.Name, pattern = ' ', n=3)
# Your code here
library(stringr)
str_split_fixed(sales$Product.Name, pattern = ' ', n=3)
# Your code here
library(stringr)
str_count(sales$Product.Name, 'table')
# Your code here
library(stringr)
sum(str_count(sales$Product.Name, 'table'))
# Your code here
library(stringr)
sum(str_count(sales$Product.Name, 'table'))
# Your code here
library(stringr)
sum(str_count(sales$Product.Name, 'table'))
# Your code here
library(stringr)
str_count(sales$Product.Name, 'table'))
# Your code here
library(stringr)
str_count(sales$Product.Name, 'table')
# Your code here
library(stringr)
sum(str_count(sales$Product.Name, 'table'))
# Your code here
library(stringr)
sum(str_count(sales$Product.Name, 'table'))
# Your code here
sales <- read.delim("C:/DSE5002/Week_2/Data/sales_pipe.txt"
,stringsAsFactors=FALSE
,sep = "|"
,fileEncoding="WINDOWS-1252"
)
# Your code here
library(stringr)
colnames(sales)[1] <- 'Row.ID'
# Your code here
library(lubridate)
sales$Ship.Date <- as.Date(sales$Ship.Date
, format ='%B %d %Y')
sales$Order.Date <- as.Date(sales$Order.Date
, format= '%m/%d/%Y')
fulfillment_time <- difftime(max(sales$Order.Date),min(sales$Order.Date))
fulfillment_time / dyears(1) ##Years
fulfillment_time / dweeks(1) ##Weeks
# Your code here
(mean(difftime((sales$Ship.Date),(sales$Order.Date))))/ddays(1)
# Your code here
(mean(difftime((sales$Ship.Date),(sales$Order.Date))))/ddays(1)
# Your code here
library(stringr)
unique_names <- unique(sales$Customer.Name)
first_name <- str_split_fixed(unique_names, pattern = ' ', n=3)
length(str_which(first_name, "Bill"))
# Your code here
library(stringr)
unique_names <- unique(sales$Customer.Name)
first_name <- str_split_fixed(unique_names, pattern = ' ', n=3)
length(str_which(first_name, "Bill"))
# Your code here
library(stringr)
sum(str_count(sales$Product.Name, 'table'))
# Your code here
sales$State <- factor(sales$State)
table(sales$State)
# Your code here
sales$State <- factor(sales$State)
table(sales$State)
# Your code here
texas_df <- sales[sales$State == 'Texas',]
texas_df$Category <- factor(texas_df$Category)
barplot(table(texas_df$Category))
# Your code here
texas_df <- sales[sales$State == 'Texas',]
texas_df$Category <- factor(texas_df$Category)
barplot(table(texas_df$Category))
# Your code here
aggregate(sales$Profit, list(sales$Region), FUN=mean)
# Your code here
aggregate(sales$Profit, list(year(sales$Order.Date)), FUN=mean)
# Your code here
aggregate(sales$Profit, list(year(sales$Order.Date)), FUN=mean)
# Your code here
library(stringr)
length(str_count(sales$Product.Name, 'table'))
# Your code here
library(stringr)
length(str_which(sales$Product.Name, 'table'))
# Your code here
library(stringr)
length(str_which(sales$Product.Name, 'table'))
# Your code here
library(stringr)
length(str_which(sales$Product.Name, 'table'))
# Your code here
library(stringr)
unique_names <- unique(sales$Customer.Name)
first_name <- str_split_fixed(unique_names, pattern = ' ', n=3)
length(str_detect(first_name, "Bill"))
# Your code here
library(stringr)
unique_names <- unique(sales$Customer.Name)
first_name <- str_split_fixed(unique_names, pattern = ' ', n=3)
length(str_match(first_name, "Bill"))
# Your code here
library(stringr)
unique_names <- unique(sales$Customer.Name)
first_name <- str_split_fixed(unique_names, pattern = ' ', n=3)
length(str_which(first_name, "Bill"))
# Your code here
library(stringr)
length(str_which(sales$Product.Name, 'table'))
# Your code here
sales <- read.delim("C:/DSE5002/Week_2/Data/sales_pipe.txt"
,stringsAsFactors=FALSE
,sep = "|"
,fileEncoding="WINDOWS-1252"
)
# Your code here
library(stringr)
colnames(sales)[1] <- 'Row.ID'
# Your code here
library(lubridate)
sales$Ship.Date <- as.Date(sales$Ship.Date
, format ='%B %d %Y')
sales$Order.Date <- as.Date(sales$Order.Date
, format= '%m/%d/%Y')
fulfillment_time <- difftime(max(sales$Order.Date),min(sales$Order.Date))
fulfillment_time / dyears(1) ##Years
fulfillment_time / dweeks(1) ##Weeks
# Your code here
(mean(difftime((sales$Ship.Date),(sales$Order.Date))))/ddays(1)
# Your code here
library(stringr)
unique_names <- unique(sales$Customer.Name)
first_name <- str_split_fixed(unique_names, pattern = ' ', n=3)
length(str_which(first_name, "Bill"))
# Your code here
library(stringr)
length(str_which(sales$Product.Name, 'table'))
# Your code here
sales$State <- factor(sales$State)
table(sales$State)
# Your code here
texas_df <- sales[sales$State == 'Texas',]
texas_df$Category <- factor(texas_df$Category)
barplot(table(texas_df$Category))
# Your code here
aggregate(sales$Profit, list(sales$Region), FUN=mean)
# Your code here
aggregate(sales$Profit, list(year(sales$Order.Date)), FUN=mean)
# Your code here
library(lubridate)
sales$Ship.Date <- as.Date(sales$Ship.Date
, format ='%B %d %Y')
sales$Order.Date <- as.Date(sales$Order.Date
, format= '%m/%d/%Y')
fulfillment_time <- difftime(max(sales$Order.Date),min(sales$Order.Date))
print(fulfillment_time)
fulfillment_time / dyears(1) ##Years
fulfillment_time / dweeks(1) ##Weeks
# Your code here
library(lubridate)
sales$Ship.Date <- as.Date(sales$Ship.Date
, format ='%B %d %Y')
sales$Order.Date <- as.Date(sales$Order.Date
, format= '%m/%d/%Y')
fulfillment_time <- difftime(max(sales$Order.Date),min(sales$Order.Date))
print(fulfillment_time) ## Difference in Days
fulfillment_time / dyears(1) ##Difference in Years
fulfillment_time / dweeks(1) ##Difference in Weeks
library(dplyr)
library(ggplot2)
library(stringr)
library(tidyr)
library(lubridate)
salary <- read.csv("C:/DSE5002/R Project/patricksheehan.module05RProject.csv"
,stringsAsFactors=FALSE
)
unique_job_titles <- unique(salary$job_title)
print(unique_job_titles)
salary <- salary[salary$company_size != 'L', ]
foreign_median_df <-salary[salary$employment_type %in% c('CT','FT'), ]
foreign_median_df <-salary[salary$employment_type %in% c('CT','FT'), ]
foreign_median_df <-foreign_median_df %>%
mutate(foreign_residence = foreign_median_df$employee_residence != 'US')
foreign_median_df <-foreign_median_df %>%
group_by(experience_level, employment_type, foreign_residence) %>%
mutate(median_salary = median(salary_in_usd))
salary <- salary %>%
mutate(experience_level = recode(experience_level, EN = 'Entry Level', MI = 'Mid-level', SE =  'Senior Level', EX = 'Executive Level' ))
salary$remote_ratio = factor(salary$remote_ratio,
levels = c(0, 50, 100),
labels = c("On-Site", "Hybrid", "Remote"))
foreign_median_df <- foreign_median_df %>%
mutate(experience_level = recode(experience_level, EN = 'Entry Level', MI = 'Mid-level', SE =  'Senior Level', EX = 'Executive Level' ))
foreign_median_df$remote_ratio = factor(foreign_median_df$remote_ratio,
levels = c(0, 50, 100),
labels = c("On-Site", "Hybrid", "Remote"))
foreign_median_df <- foreign_median_df %>%
mutate(employment_type = recode(employment_type, FT = 'Full Time', CT = 'Contract', FL =  'Freelance' ))
level_order <- c('Entry Level', "Mid-level", "Senior Level", 'Executive Level')
ggplot(foreign_median_df)+
geom_point((aes( x= factor(experience_level, level = level_order), y= median_salary, color = foreign_residence, size = 2))) +
facet_wrap(.~employment_type) +
scale_y_continuous(labels = scales::dollar_format(), limits = c(0,450000), breaks = c(0,50000,100000,150000,200000,250000,300000,350000,400000,450000))+
labs(x= "Experience Level", y = "Median Salary in USD", title = "Median Salary for Contract/Fulltime in Data Jobs",color = "Foreign Residence?")  +
theme(axis.text.x = element_text(angle = 45)) +
scale_size_continuous(guide = "none")
ggplot(foreign_median_df)+
geom_point((aes( x= factor(experience_level, level = level_order), y= median_salary, color = foreign_residence, size = 2))) +
scale_y_continuous(labels = scales::dollar_format(), limits = c(0,450000), breaks = c(0,50000,100000,150000,200000,250000,300000,350000,400000,450000))+
labs(x= "Experience Level", y = "Median Salary in USD", title = "Median Salary for US/Foreign Data Science Employees by ",color = "Foreign Residence?")  +
theme(axis.text.x = element_text(angle = 45)) +
scale_size_continuous(guide = "none")
ggplot(foreign_median_df)+
geom_point((aes( x= factor(experience_level, level = level_order), y= median_salary, color = foreign_residence, size = 2))) +
facet_wrap(.~employment_type) +
scale_y_continuous(labels = scales::dollar_format(), limits = c(0,450000), breaks = c(0,50000,100000,150000,200000,250000,300000,350000,400000,450000))+
labs(x= "Experience Level", y = "Median Salary in USD", title = "Median Salary for US/Foreign Data Science Employees by ",color = "Foreign Residence?")  +
theme(axis.text.x = element_text(angle = 45)) +
scale_size_continuous(guide = "none")
ggplot(foreign_median_df)+
geom_point((aes( x= factor(experience_level, level = level_order), y= median_salary, color = foreign_residence, size = 2))) +
facet_wrap(.~employment_type) +
scale_y_continuous(labels = scales::dollar_format(), limits = c(0,450000), breaks = c(0,50000,100000,150000,200000,250000,300000,350000,400000,450000))+
labs(x= "Experience Level", y = "Median Salary in USD", title = "Median Salary for US/Foreign Data Science Employees by Employment Type ",color = "Foreign Residence?")  +
theme(axis.text.x = element_text(angle = 45)) +
scale_size_continuous(guide = "none")
ggplot(foreign_median_df)+
geom_point((aes( x= factor(experience_level, level = level_order), y= median_salary, color = foreign_residence, size = 2))) +
facet_wrap(.~employment_type) +
scale_y_continuous(labels = scales::dollar_format(), limits = c(0,450000), breaks = c(0,50000,100000,150000,200000,250000,300000,350000,400000,450000))+
labs(x= "Experience Level", y = "Median Salary in USD", title = "Median Salary for US/Foreign Data Science Employees ",color = "Foreign Residence?")  +
theme(axis.text.x = element_text(angle = 45)) +
scale_size_continuous(guide = "none")
ggplot(foreign_median_df)+
geom_point((aes( x= factor(experience_level, level = level_order), y= median_salary, color = foreign_residence, size = 2))) +
facet_wrap(.~employment_type) +
scale_y_continuous(labels = scales::dollar_format(), limits = c(0,450000), breaks = c(0,50000,100000,150000,200000,250000,300000,350000,400000,450000))+
labs(x= "Experience Level", y = "Median Salary in USD", title = "Median Salary for US/Foreign Data Science Roles ",color = "Foreign Residence?")  +
theme(axis.text.x = element_text(angle = 45)) +
scale_size_continuous(guide = "none")
foreign_median_df$foreign_residence = factor(foreign_median_df$foreign_residence,
levels = c("TRUE","FALSE"),
labels = c("Foreign","US"))
foreign_median_df <- foreign_median_df %>%
mutate(employment_type = recode(employment_type, FT = 'Full Time', CT = 'Contract', FL =  'Freelance' ))
level_order <- c('Entry Level', "Mid-level", "Senior Level", 'Executive Level')
------------------------------------------------------
level_order <- c('Entry Level', "Mid-level", "Senior Level", 'Executive Level')
level_order <- c('Entry Level', "Mid-level", "Senior Level", 'Executive Level')
ggplot(foreign_median_df)+
geom_point((aes( x= factor(experience_level, level = level_order), y= median_salary, color = foreign_residence, size = 2))) +
facet_wrap(.~employment_type) +
scale_y_continuous(labels = scales::dollar_format(), limits = c(0,450000), breaks = c(0,50000,100000,150000,200000,250000,300000,350000,400000,450000))+
labs(x= "Experience Level", y = "Median Salary in USD", title = "Median Salary for US/Foreign Data Science Roles ",color = "Foreign Residence?")  +
theme(axis.text.x = element_text(angle = 45)) +
scale_size_continuous(guide = "none")
ggplot(foreign_median_df)+
geom_point((aes( x= factor(experience_level, level = level_order), y= median_salary, color = foreign_residence, size = 2))) +
facet_grid(.~employment_type) +
scale_y_continuous(labels = scales::dollar_format(), limits = c(0,450000), breaks = c(0,50000,100000,150000,200000,250000,300000,350000,400000,450000))+
labs(x= "Experience Level", y = "Median Salary in USD", title = "Median Salary for US/Foreign Data Science Roles ",color = "Foreign Residence?")  +
theme(axis.text.x = element_text(angle = 45)) +
scale_size_continuous(guide = "none")
ggplot(foreign_median_df)+
geom_point((aes( x= factor(experience_level, level = level_order), y= median_salary, color = foreign_residence, size = 2))) +
facet_grid(.~employment_type) +
scale_y_continuous(labels = scales::dollar_format(), limits = c(0,450000), breaks = c(0,50000,100000,150000,200000,250000,300000,350000,400000,450000))+
labs(x= "Experience Level", y = "Median Salary in USD", title = "Median Salary for US/Foreign Data Science Roles ",color = "Residence")  +
theme(axis.text.x = element_text(angle = 45)) +
scale_size_continuous(guide = "none")
all_data_scientists <- salary[salary$job_title %in% c('Data Scientist','Data Analyst','Data Engineer'), ]
all_data_scientists <- salary[salary$job_title %in% c('Data Scientist','Data Analyst','Data Engineer'), ]
##Narrowing to only contract/Full time
all_data_scientists <- all_data_scientists[all_data_scientists$employment_type %in% c('CT','FT'),]
##Narrowing to only mid/senior level employees
all_data_scientists <- all_data_scientists[all_data_scientists$experience_level %in% c('Senior Level','Mid-level'),]
##Adding in median salary column to dataframe grouped by work year, experience level, and job title
all_data_scientists<- all_data_scientists %>%
group_by(work_year, experience_level, job_title) %>%
mutate(median_salary = median(salary_in_usd))
ggplot(all_data_scientists) +
geom_line(aes(x = work_year, y = median_salary, color = job_title, group = job_title)) +
theme(axis.text.x = element_text(angle = 45)) +
facet_wrap(.~experience_level) +
scale_x_continuous(breaks = c(2020,2021,2022)) +
scale_y_continuous(labels = scales::dollar_format(),breaks = c(0,25000,50000,75000,100000,125000,150000),limits = c(0,150000)) +
labs(x= "Work Year", y = "Median Salary in USD", title = "Median Data Scientist Salaries Over Time",color = 'Job Title')
us_data_scientist <- salary[salary$employee_residence == 'US', ]
##Narrowing to only Senior Level
us_data_scientist_senior <- us_data_scientist[us_data_scientist$experience_level == 'Senior Level', ]
##Narrowing to only Data Scientists
us_data_scientist_senior_title <- us_data_scientist_senior[us_data_scientist_senior$job_title == 'Data Scientist', ]
##Creating Data Frames for on-site vs remote
us_data_scientist_senior_title_on_site <- us_data_scientist_senior_title[us_data_scientist_senior_title$remote_ratio == 'On-Site', ]
us_data_scientist_senior_title_remote <-us_data_scientist_senior_title[us_data_scientist_senior_title$remote_ratio == 'Remote', ]
percentile_75_on_site <- quantile(us_data_scientist_senior_title_on_site$salary_in_usd, .75)
percentile_50_on_site <- quantile(us_data_scientist_senior_title_on_site$salary_in_usd, .50)
percentile_25_on_site <- quantile(us_data_scientist_senior_title_on_site$salary_in_usd, .25)
percentile_75_remote <- quantile(us_data_scientist_senior_title_remote$salary_in_usd, .75)
percentile_50_remote <- quantile(us_data_scientist_senior_title_remote$salary_in_usd, .50)
percentile_25_remote <- quantile(us_data_scientist_senior_title_remote$salary_in_usd, .25)
ggplot(us_data_scientist_senior_title) +
geom_boxplot(aes(x=job_title, y= salary_in_usd, fill = remote_ratio)) +
scale_y_continuous(labels = scales::dollar_format(), breaks = c(0,106763,130000,145200,172500,210000,250000)) +
facet_grid(.~remote_ratio) +
labs(x= "Job Title", y = "Salary in USD", title = "Box Plot of Salary for Senior Level US Data Scientists", fill = "Remote or On-Site")
foreign_data_engineer <- salary[salary$employee_residence != 'US', ]
##Narrowing to only Mid-level
foreign_data_engineer_mid <- foreign_data_engineer[foreign_data_engineer$experience_level == 'Mid-level', ]
##Narrowing to only Data Engineers
foreign_data_engineer_mid_title <- foreign_data_engineer_mid[foreign_data_engineer_mid$job_title == 'Data Engineer', ]
##Creating Data Frames for remote
foreign_data_engineer_senior_title_remote <-foreign_data_engineer_mid_title[foreign_data_engineer_mid_title$remote_ratio == 'Remote', ]
percentile_75_remote_engineer <- quantile(foreign_data_engineer_senior_title_remote$salary_in_usd, .75)
percentile_50_remote_engineer <- quantile(foreign_data_engineer_senior_title_remote$salary_in_usd, .50)
percentile_25_remote_engineer <- quantile(foreign_data_engineer_senior_title_remote$salary_in_usd, .25)
ggplot(foreign_data_engineer_senior_title_remote) +
geom_boxplot(aes(x=job_title, y= salary_in_usd,fill = job_title)) +
scale_y_continuous(labels = scales::dollar_format(), breaks = c(0,25000,50000,60658,76940,87932,100000,125000,150000)) +
facet_grid(.~remote_ratio) +
labs(x= "Job Title", y = "Salary in USD", title = "Box Plot of Salary for Foreign Mid-Level Data Engineer", fill = "Job Title")
foreign_data_analyst <- salary[salary$employee_residence != 'US', ]
##Narrowing to only Mid-level
foreign_data_analyst_mid <- foreign_data_analyst[foreign_data_analyst$experience_level == 'Mid-level', ]
##Narrowing to only Data Analysts
foreign_data_analyst_mid_title <- foreign_data_analyst_mid[foreign_data_analyst_mid$job_title == 'Data Analyst', ]
##Creating Data Frames for remote
foreign_data_analyst_title_remote <-foreign_data_analyst_mid_title[foreign_data_analyst_mid_title$remote_ratio == 'Remote', ]
percentile_75_remote_analyst <- quantile(foreign_data_analyst_title_remote$salary_in_usd, .75)
percentile_50_remote_analyst <- quantile(foreign_data_analyst_title_remote$salary_in_usd, .50)
percentile_25_remote_analyst <- quantile(foreign_data_analyst_title_remote$salary_in_usd, .25)
ggplot(foreign_data_analyst_title_remote) +
geom_boxplot(aes(x=job_title, y= salary_in_usd,fill = job_title)) +
scale_y_continuous(labels = scales::dollar_format(), breaks = c(0,25000,32974,39263,43966,50000)) +
facet_grid(.~remote_ratio) +
labs(x= "Job Title", y = "Salary in USD", title = "Box Plot of Salary for Foreign Mid-Level Data Analyst", fill = "Job Title")
ggplot(all_data_scientists) +
geom_line(aes(x = work_year, y = median_salary, color = job_title, group = job_title)) +
theme(axis.text.x = element_text(angle = 45)) +
facet_wrap(.~experience_level) +
scale_x_continuous(breaks = c(2020,2021,2022)) +
scale_y_continuous(labels = scales::dollar_format(),breaks = c(0,25000,50000,75000,100000,125000,150000),limits = c(0,150000)) +
labs(x= "Work Year", y = "Median Salary in USD", title = "Median Data Science Salaries Over Time",color = 'Job Title')
library(dplyr)
library(ggplot2)
library(stringr)
library(tidyr)
library(lubridate)
salary <- read.csv("C:/DSE5002/R Project/patricksheehan.module05RProject.csv"
,stringsAsFactors=FALSE
)
unique_job_titles <- unique(salary$job_title)
print(unique_job_titles)
salary <- salary[salary$company_size != 'L', ]
foreign_median_df <-salary[salary$employment_type %in% c('CT','FT'), ]
foreign_median_df <-foreign_median_df %>%
mutate(foreign_residence = foreign_median_df$employee_residence != 'US')
foreign_median_df <-foreign_median_df %>%
group_by(experience_level, employment_type, foreign_residence) %>%
mutate(median_salary = median(salary_in_usd))
salary <- salary %>%
mutate(experience_level = recode(experience_level, EN = 'Entry Level', MI = 'Mid-level', SE =  'Senior Level', EX = 'Executive Level' ))
salary$remote_ratio = factor(salary$remote_ratio,
levels = c(0, 50, 100),
labels = c("On-Site", "Hybrid", "Remote"))
foreign_median_df <- foreign_median_df %>%
mutate(experience_level = recode(experience_level, EN = 'Entry Level', MI = 'Mid-level', SE =  'Senior Level', EX = 'Executive Level' ))
foreign_median_df$remote_ratio = factor(foreign_median_df$remote_ratio,
levels = c(0, 50, 100),
labels = c("On-Site", "Hybrid", "Remote"))
foreign_median_df$foreign_residence = factor(foreign_median_df$foreign_residence,
levels = c("TRUE","FALSE"),
labels = c("Foreign","US"))
foreign_median_df <- foreign_median_df %>%
mutate(employment_type = recode(employment_type, FT = 'Full Time', CT = 'Contract', FL =  'Freelance' ))
level_order <- c('Entry Level', "Mid-level", "Senior Level", 'Executive Level')
ggplot(foreign_median_df)+
geom_point((aes( x= factor(experience_level, level = level_order), y= median_salary, color = foreign_residence, size = 2))) +
facet_grid(.~employment_type) +
scale_y_continuous(labels = scales::dollar_format(), limits = c(0,450000), breaks = c(0,50000,100000,150000,200000,250000,300000,350000,400000,450000))+
labs(x= "Experience Level", y = "Median Salary in USD", title = "Median Salary for US/Foreign Data Science Roles ",color = "Residence")  +
theme(axis.text.x = element_text(angle = 45)) +
scale_size_continuous(guide = "none")
all_data_scientists <- salary[salary$job_title %in% c('Data Scientist','Data Analyst','Data Engineer'), ]
##Narrowing to only contract/Full time
all_data_scientists <- all_data_scientists[all_data_scientists$employment_type %in% c('CT','FT'),]
##Narrowing to only mid/senior level employees
all_data_scientists <- all_data_scientists[all_data_scientists$experience_level %in% c('Senior Level','Mid-level'),]
##Adding in median salary column to dataframe grouped by work year, experience level, and job title
all_data_scientists<- all_data_scientists %>%
group_by(work_year, experience_level, job_title) %>%
mutate(median_salary = median(salary_in_usd))
ggplot(all_data_scientists) +
geom_line(aes(x = work_year, y = median_salary, color = job_title, group = job_title)) +
theme(axis.text.x = element_text(angle = 45)) +
facet_wrap(.~experience_level) +
scale_x_continuous(breaks = c(2020,2021,2022)) +
scale_y_continuous(labels = scales::dollar_format(),breaks = c(0,25000,50000,75000,100000,125000,150000),limits = c(0,150000)) +
labs(x= "Work Year", y = "Median Salary in USD", title = "Median Data Science Salaries Over Time",color = 'Job Title')
us_data_scientist <- salary[salary$employee_residence == 'US', ]
##Narrowing to only Senior Level
us_data_scientist_senior <- us_data_scientist[us_data_scientist$experience_level == 'Senior Level', ]
##Narrowing to only Data Scientists
us_data_scientist_senior_title <- us_data_scientist_senior[us_data_scientist_senior$job_title == 'Data Scientist', ]
##Creating Data Frames for on-site vs remote
us_data_scientist_senior_title_on_site <- us_data_scientist_senior_title[us_data_scientist_senior_title$remote_ratio == 'On-Site', ]
us_data_scientist_senior_title_remote <-us_data_scientist_senior_title[us_data_scientist_senior_title$remote_ratio == 'Remote', ]
percentile_75_on_site <- quantile(us_data_scientist_senior_title_on_site$salary_in_usd, .75)
percentile_50_on_site <- quantile(us_data_scientist_senior_title_on_site$salary_in_usd, .50)
percentile_25_on_site <- quantile(us_data_scientist_senior_title_on_site$salary_in_usd, .25)
percentile_75_remote <- quantile(us_data_scientist_senior_title_remote$salary_in_usd, .75)
percentile_50_remote <- quantile(us_data_scientist_senior_title_remote$salary_in_usd, .50)
percentile_25_remote <- quantile(us_data_scientist_senior_title_remote$salary_in_usd, .25)
ggplot(us_data_scientist_senior_title) +
geom_boxplot(aes(x=job_title, y= salary_in_usd, fill = remote_ratio)) +
scale_y_continuous(labels = scales::dollar_format(), breaks = c(0,106763,130000,145200,172500,210000,250000)) +
facet_grid(.~remote_ratio) +
labs(x= "Job Title", y = "Salary in USD", title = "Box Plot of Salary for Senior Level US Data Scientists", fill = "Remote or On-Site")
foreign_data_engineer <- salary[salary$employee_residence != 'US', ]
##Narrowing to only Mid-level
foreign_data_engineer_mid <- foreign_data_engineer[foreign_data_engineer$experience_level == 'Mid-level', ]
##Narrowing to only Data Engineers
foreign_data_engineer_mid_title <- foreign_data_engineer_mid[foreign_data_engineer_mid$job_title == 'Data Engineer', ]
##Creating Data Frames for remote
foreign_data_engineer_senior_title_remote <-foreign_data_engineer_mid_title[foreign_data_engineer_mid_title$remote_ratio == 'Remote', ]
percentile_75_remote_engineer <- quantile(foreign_data_engineer_senior_title_remote$salary_in_usd, .75)
percentile_50_remote_engineer <- quantile(foreign_data_engineer_senior_title_remote$salary_in_usd, .50)
percentile_25_remote_engineer <- quantile(foreign_data_engineer_senior_title_remote$salary_in_usd, .25)
ggplot(foreign_data_engineer_senior_title_remote) +
geom_boxplot(aes(x=job_title, y= salary_in_usd,fill = job_title)) +
scale_y_continuous(labels = scales::dollar_format(), breaks = c(0,25000,50000,60658,76940,87932,100000,125000,150000)) +
facet_grid(.~remote_ratio) +
labs(x= "Job Title", y = "Salary in USD", title = "Box Plot of Salary for Foreign Mid-Level Data Engineer", fill = "Job Title")
foreign_data_analyst <- salary[salary$employee_residence != 'US', ]
##Narrowing to only Mid-level
foreign_data_analyst_mid <- foreign_data_analyst[foreign_data_analyst$experience_level == 'Mid-level', ]
##Narrowing to only Data Analysts
foreign_data_analyst_mid_title <- foreign_data_analyst_mid[foreign_data_analyst_mid$job_title == 'Data Analyst', ]
##Creating Data Frames for remote
foreign_data_analyst_title_remote <-foreign_data_analyst_mid_title[foreign_data_analyst_mid_title$remote_ratio == 'Remote', ]
percentile_75_remote_analyst <- quantile(foreign_data_analyst_title_remote$salary_in_usd, .75)
percentile_50_remote_analyst <- quantile(foreign_data_analyst_title_remote$salary_in_usd, .50)
percentile_25_remote_analyst <- quantile(foreign_data_analyst_title_remote$salary_in_usd, .25)
ggplot(foreign_data_analyst_title_remote) +
geom_boxplot(aes(x=job_title, y= salary_in_usd,fill = job_title)) +
scale_y_continuous(labels = scales::dollar_format(), breaks = c(0,25000,32974,39263,43966,50000)) +
facet_grid(.~remote_ratio) +
labs(x= "Job Title", y = "Salary in USD", title = "Box Plot of Salary for Foreign Mid-Level Data Analyst", fill = "Job Title")
